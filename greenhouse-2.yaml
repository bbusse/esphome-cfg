esphome:
  name: greenhouse-2
  friendly_name: Greenhouse 2
  area: farm
  platformio_options:
    platform: espressif32
    board: az-delivery-devkit-v4

esp32:
  board: az-delivery-devkit-v4

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret ha_api_key

ota:
  - platform: esphome
    password: !secret ha_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_passphrase

  # Enable fallback hotspot
  ap:
    ssid: !secret wifi_fallback_ssid
    password: !secret wifi_fallback_passphrase

web_server:
  port: 80

# Sync time with Home Assistant
time:
  - platform: homeassistant
    id: homeassistant_time

i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a

sensor:
  - platform: bme280_i2c
    temperature:
      name: "BME280 Temperature"
      id: bme280_temperature
    pressure:
      name: "BME280 Pressure"
      id: bme280_pressure
    humidity:
      name: "BME280 Relative Humidity"
      id: bme280_humidity
    address: 0x76
    update_interval: 15s

  - platform: template
    name: "Equivalent sea level pressure"
    lambda: |-
      const float STANDARD_ALTITUDE = 0.6; // in meters, see note
      return id(bme280_pressure).state / powf(1 - ((0.0065 * STANDARD_ALTITUDE) /
        (id(bme280_temperature).state + (0.0065 * STANDARD_ALTITUDE) + 273.15)), 5.257); // in hPa
    update_interval: 15s
    unit_of_measurement: 'hPa'

  - platform: dallas_temp
    name: temperature
    update_interval: 600s

  - platform: uptime
    id: uptime_s
    type: seconds
    name: Uptime Sensor

  # Reports the WiFi signal strength/RSSI in dB
  - platform: wifi_signal
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  # Reports the WiFi signal strength in %
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""

text_sensor:
  # Expose ESPHome version as sensor
  - platform: version
    name: ESPHome Version

  - platform: template
    name: "Uptime"
    lambda: |-
      uint32_t dur = id(uptime_s).state;
      int days = 0;
      int hours = 0;
      int mins = 0;
      if (dur > 86399) {
        days = trunc(dur / 86400);
        dur = dur - (days * 86400);
      }
      if (dur > 3599) {
        hours = trunc(dur / 3600);
        dur = dur - (hours * 3600);
      }
      if (dur > 59) {
        mins = trunc(dur / 60);
        dur = dur - (mins * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", days, hours, mins, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 60s

light:
  - platform: status_led
    name: "Power State LED"
    pin: GPIO32
  - platform: status_led
    name: "Network State LED"
    pin: GPIO33

one_wire:
  - platform: gpio
    pin: GPIO27
